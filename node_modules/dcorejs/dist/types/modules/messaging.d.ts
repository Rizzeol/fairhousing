/**
 * @module MessagingModule
 */
import { ApiModule } from './ApiModule';
import { MessagingApi } from '../api/messaging';
import { DatabaseApi } from '../api/database';
import { DCoreMessagePayload } from '../model/messaging';
export declare class MessagingModule extends ApiModule {
    constructor(dbApi: DatabaseApi, messageApi: MessagingApi);
    /**
     * List sent messages.
     * https://docs.decent.ch/developer/classgraphene_1_1wallet_1_1detail_1_1wallet__api__impl.html#a2e9a6ada3838f085342b101dd2011b03
     *
     * @param {string} sender                       Account id of sender, in format '1.2.X'. Example '1.2.345'.
     * @param {string} decryptPrivateKey            Private key for memo decryption. Default is ''. Therefore none of messages is decrypted.
     * @param {number} count                        Limit result size. Default 100(Max).
     * @returns {Promise<DCoreMessagePayload[]>}    List of DCoreMessagePayload objects.
     */
    getSentMessages(sender: string, decryptPrivateKey?: string, count?: number): Promise<DCoreMessagePayload[]>;
    /**
     * List messages.
     * https://docs.decent.ch/developer/classgraphene_1_1wallet_1_1detail_1_1wallet__api__impl.html#a810a737e6edae4bfb28e89f47833a54b
     *
     * @param {string} receiver                     Account id of receiver, in format '1.2.X'. Example '1.2.345'.
     * @param {string} decryptPrivateKey            Private key to sign transaction.
     * @param {number} count                        Limit result size. Default 100(Max).
     * @returns {Promise<DCoreMessagePayload[]>}    List of DCoreMessagePayload objects.
     */
    getMessages(receiver: string, decryptPrivateKey?: string, count?: number): Promise<DCoreMessagePayload[]>;
    /**
     * List message objects.
     * https://docs.decent.ch/developer/classgraphene_1_1wallet_1_1detail_1_1wallet__api__impl.html#a7cb689db3eeba6eb74ea2920d5c96236
     *
     * @param {string} sender                       Account id of sender, in format '1.2.X'. Example '1.2.345'.
     * @param {string} receiver                     Account id of receiver, in format '1.2.X'. Example '1.2.345'.
     * @param {string} decryptPrivateKey            Private key to decrypt messages content.
     * @param {number} count                        Limit result count. Default 100(Max)
     * @returns {Promise<DCoreMessagePayload[]>}    List of DCoreMessagePayload message objects.
     */
    getMessageObjects(sender?: string, receiver?: string, decryptPrivateKey?: string, count?: number): Promise<DCoreMessagePayload[]>;
    private decryptMessages(messages, decryptPrivateKey);
    /**
     * Send encrypted message
     * https://docs.decent.ch/developer/classgraphene_1_1wallet_1_1detail_1_1wallet__api__impl.html#ab7e7eed9c157ff1c352c2179501b36c6
     *
     * @param {string} sender           Account id of sender, in format '1.2.X'. Example '1.2.345'.
     * @param {string} receiverId       Account id of receiver, in format '1.2.X'. Example '1.2.345'.
     * @param {string} message          Content of message.
     * @param {string} privateKey       Private key to encrypt message and sign transaction.
     * @returns {Promise<boolean>}      Value confirming successful transaction broadcasting.
     */
    sendMessage(sender: string, receiverId: string, message: string, privateKey: string): Promise<boolean>;
}

/**
 * @module ExplorerModule
 */
import { DatabaseApi } from '../api/database';
import { Account } from '../model/account';
import { Block, Miner } from '../model/explorer';
import { ApiModule } from './ApiModule';
export declare class ExplorerModule extends ApiModule {
    constructor(databaseApi: DatabaseApi);
    private getDatabaseObject<T>(space, type, id);
    /**
     * Get object from DCore network
     *
     * @param {string} objectId     Object id. In format 'X.Y.Z'.
     * @returns {Promise<any>}      Desired object.
     */
    getObject(objectId: string): Promise<any>;
    private hasIdCorrectFormat(id, first, second);
    private getLastPartOfId(id);
    /**
     * Get account object.
     *
     * @param {string} id           Account id in format '1.2.X'.
     * @returns {Promise<Account>}  Account object.
     */
    getAccount(id: string): Promise<Account>;
    /**
     * Get asset object.
     *
     * @param {number} id               Asset id in format '1.3.X'.
     * @returns {Promise<Block.Asset>}  Asset object.
     */
    getAsset(id: string): Promise<Block.Asset>;
    /**
     * Get miner object.
     *
     * @param {number} id               Miner id in format '1.4.X'.
     * @returns {Promise<Block.Miner>}  Miner object.
     */
    getWitness(id: string): Promise<Block.Miner>;
    /**
     * Get list of history objects.
     * @param {number} id                       History id in format '1.7.X'.
     * @returns {Promise<Block.Transaction>}
     */
    getOperationHistory(id: string): Promise<Block.Transaction>;
    /**
     * Get vesting balance object.
     *
     * @param {number} id                       Vesting balance id in format '1.9.X'.
     * @returns {Promise<Block.VestingBalance>}
     */
    getVestingBalance(id: string): Promise<Block.VestingBalance>;
    /**
     * Get DCore network global properties object.
     *
     * @returns {Promise<Block.GlobalProperty>}     GlobalProperty object.
     */
    getGlobalProperty(): Promise<Block.GlobalProperty>;
    /**
     * Get DCore network dynamic properties object.
     *
     * @returns {Promise<Block.DynamicGlobalProperty>}  DynamicGlobalProperty object.
     */
    getDynamicGlobalProperty(): Promise<Block.DynamicGlobalProperty>;
    /**
     * Get asset dynamic data property object.
     *
     * @param {number} id                               Asset balance id in format '2.3.X'.
     * @returns {Promise<Block.AssetDynamicProperty>}   AssetDynamicProperty object.
     */
    getAssetDynamicDataType(id: string): Promise<Block.AssetDynamicProperty>;
    /**
     * Get account balance object.
     *
     * @param {number} id                           Account balance id in format '2.4.X'.
     * @returns {Promise<Block.AccountBalance>}     AccountBalance object.
     */
    getAccountBalance(id: string): Promise<Block.AccountBalance>;
    /**
     * Get account statistics object.
     *
     * @param {number} id                           Account statistics id in format '2.5.X'.
     * @returns {Promise<Block.AccountStatistics>}  AccountStatistics object.
     */
    getAccountStatistics(id: string): Promise<Block.AccountStatistics>;
    /**
     * Get block summary object.
     *
     * @param {number} id                       Block summary id in format '2.7.X'.
     * @returns {Promise<Block.BlockSummary>}
     */
    getBlockSummary(id: string): Promise<Block.BlockSummary>;
    /**
     * Get list of account's transaction history objects.
     *
     * @param {number} id                                   Account transaction history id in format '2.8.X'.
     * @returns {Promise<Block.AccountTransactionHistory>}  List of account transaction history objects.
     */
    getAccountTransactionHistory(id: string): Promise<Block.AccountTransactionHistory>;
    /**
     * Get chain property.
     *
     * @param {number} id                       Chain property id in format '2.9.X'.
     * @returns {Promise<Block.ChainProperty>}  ChainProperty object.
     */
    getChainProperty(id: string): Promise<Block.ChainProperty>;
    /**
     * Get miner's schedule object.
     *
     * @param {number} id                       Miner schedule id in format '2.10.X'.
     * @returns {Promise<Block.MinerSchedule>}  Miner schedule object.
     */
    getMinerSchedule(id: string): Promise<Block.MinerSchedule>;
    /**
     * Get budget record object
     *
     * @param {number} id                       Budget record id in format '2.11.X'.
     * @returns {Promise<Block.BudgetReport>}   Budget record object.
     */
    getBudgetRecord(id: string): Promise<Block.BudgetReport>;
    /**
     * Get buying object.
     *
     * @param {number} id                   Buying object id in format '2.12.X'.
     * @returns {Promise<Block.Buying>}     Buying object.
     */
    getBuying(id: string): Promise<Block.Buying>;
    /**
     * Get content object.
     *
     * @param {number} id                   Content object id in format '2.13.X'.
     * @returns {Promise<Block.Content>}    Content object.
     */
    getContent(id: string): Promise<Block.Content>;
    /**
     * Get publisher object.
     *
     * @param {number} id                   Publisher object id in format '2.14.X'.
     * @returns {Promise<Block.Publisher>}  Publisher object.
     */
    getPublisher(id: string): Promise<Block.Publisher>;
    /**
     * Get subscription object.
     *
     * @param {number} id                       Subscription object id in format '2.15.X'.
     * @returns {Promise<Block.Subscription>}   Subscription object.
     */
    getSubscription(id: string): Promise<Block.Subscription>;
    /**
     * Get seeding statistics object.
     *
     * @param {number} id                           Seeding statistics object id in format '2.16.X'.
     * @returns {Promise<Block.SeedingStatistics>}  SeedingStatistics object.
     */
    getSeedingStatistics(id: string): Promise<Block.SeedingStatistics>;
    /**
     * Get transaction detail object.
     *
     * @param {number} id                           Transaction detail object id in format '2.17.X'.
     * @returns {Promise<Block.TransactionDetail>}  TransactionDetail object.
     */
    getTransactionDetail(id: string): Promise<Block.TransactionDetail>;
    /**
     * Get block object.
     *
     * @param {number} id                   Block number.
     * @returns {Promise<Block.Block>}      Block object.
     */
    getBlock(id: number): Promise<Block.Block>;
    /**
     * Get blocks objects.
     *
     * @param {number} id                       Blocks start number to start list from.
     * @param {number} count                    Number of block to be listed in result.
     * @returns {Promise<Array<Block.Block>>}   List of Block objects.
     */
    getBlocks(id: number, count: number): Promise<Array<Block.Block>>;
    /**
     * Get number of accounts existing in DCore network.
     *
     * @returns {Promise<number>}   Number of accounts.
     */
    getAccountCount(): Promise<number>;
    /**
     * Get accounts objects.
     *
     * @param {number} ids                  Account ids in format '1.2.X'.
     * @returns {Promise<Array<Account>>}   List of account objects.
     */
    getAccounts(ids: string[]): Promise<Array<Account>>;
    /**
     * Get transaction object.
     *
     * @param {number} blockNo                  Block number.
     * @param {number} txNum                    Transaction number.
     * @returns {Promise<Block.Transaction>}    Transaction object.
     */
    getTransaction(blockNo: number, txNum: number): Promise<Block.Transaction>;
    /**
     * Get list of miners objects.
     *
     * @deprecated This method will be removed in next release
     * @param {string} fromId               Miner id to start from, last part of id -> X from '1.4.X'. Default '0.0.0' -> List from start
     * @param {number} limit                Limit result list. Default 100(Max)
     * @returns {Promise<Array<Miner>>}
     */
    listMiners(fromId?: string, limit?: number): Promise<Array<Miner>>;
    /**
     * Get miners objects.
     *
     * @param {number[]} ids                List of miner ids in format '1.4.X'.
     * @returns {Promise<Array<Miner>>}     List of miner objects.
     */
    getMiners(ids: string[]): Promise<Array<Miner>>;
    /**
     * Get miner object.
     *
     * @param {number} id                   Miner id in format '2.8.X'.
     * @returns {Promise<Miner | null>}     Miner object
     */
    getMiner(id: string): Promise<Miner | null>;
    /**
     * Get number of miners on DCore network.
     *
     * @returns {Promise<number>}   Number of miners.
     */
    getMinerCount(): Promise<number>;
    /**
     * Get head block time.
     *
     * @returns {Promise<string>}   Head block time.
     */
    getHeadBlockTime(): Promise<string>;
}

import { ContentModule } from './modules/content';
import { AccountModule } from './modules/account';
import { ApiConnector, ConnectionState } from './api/apiConnector';
import { AssetModule } from './modules/asset';
import { ExplorerModule } from './modules/explorer';
import { MiningModule } from './modules/mining';
import { SubscriptionModule } from './modules/subscription';
import { SeedingModule } from './modules/seeding';
import { ProposalModule } from './modules/proposal';
import { TransactionBuilder } from './transactionBuilder';
import { ChainSubscriptionBlockAppliedCallback, ChainSubscriptionCallback } from './api/model/chain';
import { MessagingModule } from './modules/messaging';
export declare class DcoreError {
    static app_not_initialized: string;
    static app_missing_config: string;
}
export interface DcoreConfig {
    dcoreNetworkWSPaths: string[];
    chainId: string;
}
/**
 * Intialize dcorejs library with custom data that are used for library operations
 *
 * @param {DcoreConfig} config                                                  Configuration of dcore network yout about to connect to
 * @param {(state: ConnectionState) => void} [connectionStatusCallback=null]    Status callback to handle connection
 */
export declare function initialize(config: DcoreConfig, testConnection?: boolean, connectionStatusCallback?: (state: ConnectionState) => void): void;
/**
 * Subscribe for blockchain update notifications. Notifications is fired periodically.
 *
 * @param {(data: any[]) => void} callback
 */
export declare function subscribe(callback: ChainSubscriptionCallback): void;
export declare function subscribeBlockApplied(callback: ChainSubscriptionBlockAppliedCallback): void;
/**
 * Subscribe for events fired everytime new transaction is broadcasted to network
 *
 * @param callback
 */
export declare function subscribePendingTransaction(callback: ChainSubscriptionCallback): void;
export declare function content(): ContentModule;
export declare function account(): AccountModule;
export declare function explorer(): ExplorerModule;
export declare function asset(): AssetModule;
export declare function mining(): MiningModule;
export declare function subscription(): SubscriptionModule;
export declare function seeding(): SeedingModule;
export declare function proposal(): ProposalModule;
export declare function messaging(): MessagingModule;
export declare function transactionBuilder(): TransactionBuilder;
export declare function connection(): ApiConnector;

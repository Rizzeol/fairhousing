"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var DatabaseError;
(function (DatabaseError) {
    DatabaseError["chain_connection_failed"] = "chain_connection_failed";
    DatabaseError["chain_connecting"] = "chain_connecting";
    DatabaseError["database_execution_failed"] = "database_execution_failed";
    DatabaseError["api_connection_failed"] = "api_connection_failed";
    DatabaseError["asset_fetch_failed"] = "asset_fetch_failed";
})(DatabaseError = exports.DatabaseError || (exports.DatabaseError = {}));
var DatabaseOperationName;
(function (DatabaseOperationName) {
    DatabaseOperationName["getAccountByName"] = "get_account_by_name";
    DatabaseOperationName["searchContent"] = "search_content";
    DatabaseOperationName["getAccounts"] = "get_accounts";
    DatabaseOperationName["searchAccountHistory"] = "search_account_history";
    DatabaseOperationName["getAccountBalances"] = "get_account_balances";
    DatabaseOperationName["generateContentKeys"] = "generate_content_keys";
    DatabaseOperationName["restoreEncryptionKey"] = "restore_encryption_key";
    DatabaseOperationName["getBuyingObjectsByConsumer"] = "get_buying_objects_by_consumer";
    DatabaseOperationName["listPublishers"] = "list_seeders_by_price";
    DatabaseOperationName["getObjects"] = "get_objects";
    DatabaseOperationName["getContent"] = "get_content";
    DatabaseOperationName["getBuyingHistoryObjects"] = "get_buying_by_consumer_URI";
    DatabaseOperationName["getGlobalProperties"] = "get_global_properties";
    DatabaseOperationName["getDynamicGlobalProperties"] = "get_dynamic_global_properties";
    DatabaseOperationName["getBlock"] = "get_block";
    DatabaseOperationName["getTransaction"] = "get_transaction";
    DatabaseOperationName["getAccountCount"] = "get_account_count";
    DatabaseOperationName["lookupMiners"] = "lookup_miner_accounts";
    DatabaseOperationName["getMiners"] = "get_miners";
    DatabaseOperationName["searchFeedback"] = "search_feedback";
    DatabaseOperationName["searchAccounts"] = "search_accounts";
    DatabaseOperationName["lookupAccounts"] = "lookup_accounts";
    DatabaseOperationName["searchMinerVoting"] = "search_miner_voting";
    DatabaseOperationName["getMinerCount"] = "get_miner_count";
    DatabaseOperationName["getOpenBuyings"] = "get_open_buyings";
    DatabaseOperationName["getOpenBuyingsByURI"] = "get_open_buyings_by_URI";
    DatabaseOperationName["getOpenBuyingsByConsumer"] = "get_open_buyings_by_consumer";
    DatabaseOperationName["getBuyingHistoryObjectsByConsumer"] = "get_buying_history_objects_by_consumer";
    DatabaseOperationName["getBuyingByConsumerURI"] = "get_buying_by_consumer_URI";
    DatabaseOperationName["listActiveSubscriptionsByConsumer"] = "list_active_subscriptions_by_consumer";
    DatabaseOperationName["listSubscriptionsByConsumer"] = "list_subscriptions_by_consumer";
    DatabaseOperationName["listActiveSubscriptionsByAuthor"] = "list_active_subscriptions_by_author";
    DatabaseOperationName["listSubscriptionsByAuthor"] = "list_subscriptions_by_author";
    DatabaseOperationName["listSeedersByUpload"] = "list_seeders_by_upload";
    DatabaseOperationName["listSeedersByRegion"] = "list_seeders_by_region";
    DatabaseOperationName["listSeedersByRating"] = "list_seeders_by_rating";
    DatabaseOperationName["getVestingBalances"] = "get_vesting_balances";
    DatabaseOperationName["listAssets"] = "list_assets";
    DatabaseOperationName["getAssets"] = "get_assets";
    DatabaseOperationName["priceToDct"] = "price_to_dct";
    DatabaseOperationName["getFeedsByMiner"] = "get_feeds_by_miner";
    DatabaseOperationName["getRealSupply"] = "get_real_supply";
    DatabaseOperationName["getProposedTransactions"] = "get_proposed_transactions";
})(DatabaseOperationName = exports.DatabaseOperationName || (exports.DatabaseOperationName = {}));
var DatabaseOperation = /** @class */ (function () {
    function DatabaseOperation(name) {
        var params = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            params[_i - 1] = arguments[_i];
        }
        this._name = name;
        this._parameters = params;
    }
    Object.defineProperty(DatabaseOperation.prototype, "name", {
        get: function () {
            return this._name;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatabaseOperation.prototype, "parameters", {
        get: function () {
            return this._parameters;
        },
        enumerable: true,
        configurable: true
    });
    return DatabaseOperation;
}());
exports.DatabaseOperation = DatabaseOperation;
var SearchParamsOrder;
(function (SearchParamsOrder) {
    SearchParamsOrder["authorAsc"] = "+author";
    SearchParamsOrder["ratingAsc"] = "+rating";
    SearchParamsOrder["sizeAsc"] = "+size";
    SearchParamsOrder["priceAsc"] = "+price";
    SearchParamsOrder["createdAsc"] = "+created";
    SearchParamsOrder["expirationAsc"] = "+expiration";
    SearchParamsOrder["authorDesc"] = "-author";
    SearchParamsOrder["ratingDesc"] = "-rating";
    SearchParamsOrder["sizeDesc"] = "-size";
    SearchParamsOrder["priceDesc"] = "-price";
    SearchParamsOrder["createdDesc"] = "-created";
    SearchParamsOrder["expirationDesc"] = "-expiration";
})(SearchParamsOrder = exports.SearchParamsOrder || (exports.SearchParamsOrder = {}));
var SearchAccountHistoryOrder;
(function (SearchAccountHistoryOrder) {
    SearchAccountHistoryOrder["typeAsc"] = "+type";
    SearchAccountHistoryOrder["toAsc"] = "+to";
    SearchAccountHistoryOrder["fromAsc"] = "+from";
    SearchAccountHistoryOrder["priceAsc"] = "+price";
    SearchAccountHistoryOrder["feeAsc"] = "+fee";
    SearchAccountHistoryOrder["descriptionAsc"] = "+description";
    SearchAccountHistoryOrder["timeAsc"] = "+time";
    SearchAccountHistoryOrder["typeDesc"] = "-type";
    SearchAccountHistoryOrder["toDesc"] = "-to";
    SearchAccountHistoryOrder["fromDesc"] = "-from";
    SearchAccountHistoryOrder["priceDesc"] = "-price";
    SearchAccountHistoryOrder["feeDesc"] = "-fee";
    SearchAccountHistoryOrder["descriptionDesc"] = "-description";
    SearchAccountHistoryOrder["timeDesc"] = "-time";
})(SearchAccountHistoryOrder = exports.SearchAccountHistoryOrder || (exports.SearchAccountHistoryOrder = {}));
var MinerOrder;
(function (MinerOrder) {
    MinerOrder["nameAsc"] = "+name";
    MinerOrder["urlAsc"] = "+url";
    MinerOrder["votesAsc"] = "+votes";
    MinerOrder["nameDesc"] = "-name";
    MinerOrder["urlDesc"] = "-url";
    MinerOrder["votesDesc"] = "-votes";
    MinerOrder["none"] = "";
})(MinerOrder = exports.MinerOrder || (exports.MinerOrder = {}));
var DatabaseOperations;
(function (DatabaseOperations) {
    var SearchContent = /** @class */ (function (_super) {
        __extends(SearchContent, _super);
        function SearchContent(searchParams) {
            return _super.call(this, DatabaseOperationName.searchContent, searchParams && searchParams.term || '', searchParams && searchParams.order || '', searchParams && searchParams.user || '', searchParams && searchParams.region_code || '', searchParams && searchParams.itemId || '0.0.0', searchParams && searchParams.category || '1', searchParams && searchParams.count || 100) || this;
        }
        return SearchContent;
    }(DatabaseOperation));
    DatabaseOperations.SearchContent = SearchContent;
    var GetAccountByName = /** @class */ (function (_super) {
        __extends(GetAccountByName, _super);
        function GetAccountByName(name) {
            return _super.call(this, DatabaseOperationName.getAccountByName, name) || this;
        }
        return GetAccountByName;
    }(DatabaseOperation));
    DatabaseOperations.GetAccountByName = GetAccountByName;
    var GetAccounts = /** @class */ (function (_super) {
        __extends(GetAccounts, _super);
        function GetAccounts(ids) {
            return _super.call(this, DatabaseOperationName.getAccounts, ids) || this;
        }
        return GetAccounts;
    }(DatabaseOperation));
    DatabaseOperations.GetAccounts = GetAccounts;
    var SearchAccountHistory = /** @class */ (function (_super) {
        __extends(SearchAccountHistory, _super);
        function SearchAccountHistory(accountId, order, startObjecId, limit) {
            if (startObjecId === void 0) { startObjecId = '0.0.0'; }
            if (limit === void 0) { limit = 100; }
            return _super.call(this, DatabaseOperationName.searchAccountHistory, accountId, order, startObjecId, limit) || this;
        }
        return SearchAccountHistory;
    }(DatabaseOperation));
    DatabaseOperations.SearchAccountHistory = SearchAccountHistory;
    var GetAccountBalances = /** @class */ (function (_super) {
        __extends(GetAccountBalances, _super);
        function GetAccountBalances(accountId, assetsId) {
            return _super.call(this, DatabaseOperationName.getAccountBalances, accountId, assetsId) || this;
        }
        return GetAccountBalances;
    }(DatabaseOperation));
    DatabaseOperations.GetAccountBalances = GetAccountBalances;
    var RestoreEncryptionKey = /** @class */ (function (_super) {
        __extends(RestoreEncryptionKey, _super);
        function RestoreEncryptionKey(contentId, elGamalPrivate) {
            return _super.call(this, DatabaseOperationName.restoreEncryptionKey, { s: elGamalPrivate }, contentId) || this;
        }
        return RestoreEncryptionKey;
    }(DatabaseOperation));
    DatabaseOperations.RestoreEncryptionKey = RestoreEncryptionKey;
    var GenerateContentKeys = /** @class */ (function (_super) {
        __extends(GenerateContentKeys, _super);
        function GenerateContentKeys(seeders) {
            return _super.call(this, DatabaseOperationName.generateContentKeys, seeders) || this;
        }
        return GenerateContentKeys;
    }(DatabaseOperation));
    DatabaseOperations.GenerateContentKeys = GenerateContentKeys;
    var ListSeeders = /** @class */ (function (_super) {
        __extends(ListSeeders, _super);
        function ListSeeders(resultSize) {
            return _super.call(this, DatabaseOperationName.listPublishers, resultSize) || this;
        }
        return ListSeeders;
    }(DatabaseOperation));
    DatabaseOperations.ListSeeders = ListSeeders;
    var GetBoughtObjectsByCustomer = /** @class */ (function (_super) {
        __extends(GetBoughtObjectsByCustomer, _super);
        function GetBoughtObjectsByCustomer(consumerId, order, startObjectId, term, resultSize) {
            return _super.call(this, DatabaseOperationName.getBuyingObjectsByConsumer, consumerId, order, startObjectId, term, resultSize) || this;
        }
        return GetBoughtObjectsByCustomer;
    }(DatabaseOperation));
    DatabaseOperations.GetBoughtObjectsByCustomer = GetBoughtObjectsByCustomer;
    var GetObjects = /** @class */ (function (_super) {
        __extends(GetObjects, _super);
        function GetObjects(ids) {
            return _super.call(this, DatabaseOperationName.getObjects, ids) || this;
        }
        return GetObjects;
    }(DatabaseOperation));
    DatabaseOperations.GetObjects = GetObjects;
    var GetContent = /** @class */ (function (_super) {
        __extends(GetContent, _super);
        function GetContent(URI) {
            return _super.call(this, DatabaseOperationName.getContent, URI) || this;
        }
        return GetContent;
    }(DatabaseOperation));
    DatabaseOperations.GetContent = GetContent;
    var GetBuyingHistoryObjects = /** @class */ (function (_super) {
        __extends(GetBuyingHistoryObjects, _super);
        function GetBuyingHistoryObjects(accountId, contentURI) {
            return _super.call(this, DatabaseOperationName.getBuyingHistoryObjects, accountId, contentURI) || this;
        }
        return GetBuyingHistoryObjects;
    }(DatabaseOperation));
    DatabaseOperations.GetBuyingHistoryObjects = GetBuyingHistoryObjects;
    var GetGlobalProperties = /** @class */ (function (_super) {
        __extends(GetGlobalProperties, _super);
        function GetGlobalProperties() {
            return _super.call(this, DatabaseOperationName.getGlobalProperties) || this;
        }
        return GetGlobalProperties;
    }(DatabaseOperation));
    DatabaseOperations.GetGlobalProperties = GetGlobalProperties;
    var GetDynamicGlobalProperties = /** @class */ (function (_super) {
        __extends(GetDynamicGlobalProperties, _super);
        function GetDynamicGlobalProperties() {
            return _super.call(this, DatabaseOperationName.getDynamicGlobalProperties) || this;
        }
        return GetDynamicGlobalProperties;
    }(DatabaseOperation));
    DatabaseOperations.GetDynamicGlobalProperties = GetDynamicGlobalProperties;
    var GetBlock = /** @class */ (function (_super) {
        __extends(GetBlock, _super);
        function GetBlock(blockId) {
            return _super.call(this, DatabaseOperationName.getBlock, blockId) || this;
        }
        return GetBlock;
    }(DatabaseOperation));
    DatabaseOperations.GetBlock = GetBlock;
    var GetTransaction = /** @class */ (function (_super) {
        __extends(GetTransaction, _super);
        function GetTransaction(blockId, txNumber) {
            return _super.call(this, DatabaseOperationName.getTransaction, blockId, txNumber) || this;
        }
        return GetTransaction;
    }(DatabaseOperation));
    DatabaseOperations.GetTransaction = GetTransaction;
    var GetAccountCount = /** @class */ (function (_super) {
        __extends(GetAccountCount, _super);
        function GetAccountCount() {
            return _super.call(this, DatabaseOperationName.getAccountCount) || this;
        }
        return GetAccountCount;
    }(DatabaseOperation));
    DatabaseOperations.GetAccountCount = GetAccountCount;
    var LookupMiners = /** @class */ (function (_super) {
        __extends(LookupMiners, _super);
        function LookupMiners(startFrom, limit) {
            return _super.call(this, DatabaseOperationName.lookupMiners, startFrom, limit) || this;
        }
        return LookupMiners;
    }(DatabaseOperation));
    DatabaseOperations.LookupMiners = LookupMiners;
    var GetMiners = /** @class */ (function (_super) {
        __extends(GetMiners, _super);
        function GetMiners(minerIds) {
            return _super.call(this, DatabaseOperationName.getMiners, minerIds) || this;
        }
        return GetMiners;
    }(DatabaseOperation));
    DatabaseOperations.GetMiners = GetMiners;
    var SearchFeedback = /** @class */ (function (_super) {
        __extends(SearchFeedback, _super);
        function SearchFeedback(accountId, contentUri, startId, count) {
            return _super.call(this, DatabaseOperationName.searchFeedback, accountId, contentUri, startId, count) || this;
        }
        return SearchFeedback;
    }(DatabaseOperation));
    DatabaseOperations.SearchFeedback = SearchFeedback;
    var SearchAccounts = /** @class */ (function (_super) {
        __extends(SearchAccounts, _super);
        function SearchAccounts(searchTerm, order, id, limit) {
            return _super.call(this, DatabaseOperationName.searchAccounts, searchTerm, order, id, limit) || this;
        }
        return SearchAccounts;
    }(DatabaseOperation));
    DatabaseOperations.SearchAccounts = SearchAccounts;
    var LookupAccounts = /** @class */ (function (_super) {
        __extends(LookupAccounts, _super);
        function LookupAccounts(lowerBound, limit) {
            return _super.call(this, DatabaseOperationName.lookupAccounts, lowerBound, limit) || this;
        }
        return LookupAccounts;
    }(DatabaseOperation));
    DatabaseOperations.LookupAccounts = LookupAccounts;
    var SearchMinerVoting = /** @class */ (function (_super) {
        __extends(SearchMinerVoting, _super);
        function SearchMinerVoting(accountName, keyword, myVotes, sort, fromMinerId, limit) {
            return _super.call(this, DatabaseOperationName.searchMinerVoting, accountName, keyword, myVotes, sort, fromMinerId, limit) || this;
        }
        return SearchMinerVoting;
    }(DatabaseOperation));
    DatabaseOperations.SearchMinerVoting = SearchMinerVoting;
    var GetMinerCount = /** @class */ (function (_super) {
        __extends(GetMinerCount, _super);
        function GetMinerCount() {
            return _super.call(this, DatabaseOperationName.getMinerCount) || this;
        }
        return GetMinerCount;
    }(DatabaseOperation));
    DatabaseOperations.GetMinerCount = GetMinerCount;
    var GetOpenBuyings = /** @class */ (function (_super) {
        __extends(GetOpenBuyings, _super);
        function GetOpenBuyings() {
            return _super.call(this, DatabaseOperationName.getOpenBuyings) || this;
        }
        return GetOpenBuyings;
    }(DatabaseOperation));
    DatabaseOperations.GetOpenBuyings = GetOpenBuyings;
    var GetOpenBuyingsByURI = /** @class */ (function (_super) {
        __extends(GetOpenBuyingsByURI, _super);
        function GetOpenBuyingsByURI(URI) {
            return _super.call(this, DatabaseOperationName.getOpenBuyingsByURI, URI) || this;
        }
        return GetOpenBuyingsByURI;
    }(DatabaseOperation));
    DatabaseOperations.GetOpenBuyingsByURI = GetOpenBuyingsByURI;
    var GetOpenBuyingsByConsumer = /** @class */ (function (_super) {
        __extends(GetOpenBuyingsByConsumer, _super);
        function GetOpenBuyingsByConsumer(accountId) {
            return _super.call(this, DatabaseOperationName.getOpenBuyingsByConsumer, accountId) || this;
        }
        return GetOpenBuyingsByConsumer;
    }(DatabaseOperation));
    DatabaseOperations.GetOpenBuyingsByConsumer = GetOpenBuyingsByConsumer;
    var GetBuyingsHistoryObjectsByConsumer = /** @class */ (function (_super) {
        __extends(GetBuyingsHistoryObjectsByConsumer, _super);
        function GetBuyingsHistoryObjectsByConsumer(accountId) {
            return _super.call(this, DatabaseOperationName.getBuyingHistoryObjectsByConsumer, accountId) || this;
        }
        return GetBuyingsHistoryObjectsByConsumer;
    }(DatabaseOperation));
    DatabaseOperations.GetBuyingsHistoryObjectsByConsumer = GetBuyingsHistoryObjectsByConsumer;
    var GetBuyingByConsumerURI = /** @class */ (function (_super) {
        __extends(GetBuyingByConsumerURI, _super);
        function GetBuyingByConsumerURI(accountId, URI) {
            return _super.call(this, DatabaseOperationName.getBuyingByConsumerURI, accountId, URI) || this;
        }
        return GetBuyingByConsumerURI;
    }(DatabaseOperation));
    DatabaseOperations.GetBuyingByConsumerURI = GetBuyingByConsumerURI;
    var ListAssets = /** @class */ (function (_super) {
        __extends(ListAssets, _super);
        function ListAssets(lowerBoundSymbol, limit) {
            return _super.call(this, DatabaseOperationName.listAssets, lowerBoundSymbol, limit) || this;
        }
        return ListAssets;
    }(DatabaseOperation));
    DatabaseOperations.ListAssets = ListAssets;
    var GetAssets = /** @class */ (function (_super) {
        __extends(GetAssets, _super);
        function GetAssets(assetIds) {
            return _super.call(this, DatabaseOperationName.getAssets, assetIds) || this;
        }
        return GetAssets;
    }(DatabaseOperation));
    DatabaseOperations.GetAssets = GetAssets;
    var PriceToDCT = /** @class */ (function (_super) {
        __extends(PriceToDCT, _super);
        function PriceToDCT(asset) {
            return _super.call(this, DatabaseOperationName.priceToDct, asset) || this;
        }
        return PriceToDCT;
    }(DatabaseOperation));
    DatabaseOperations.PriceToDCT = PriceToDCT;
    var GetFeedsByMiner = /** @class */ (function (_super) {
        __extends(GetFeedsByMiner, _super);
        function GetFeedsByMiner(accountId, limit) {
            return _super.call(this, DatabaseOperationName.getFeedsByMiner, accountId, limit) || this;
        }
        return GetFeedsByMiner;
    }(DatabaseOperation));
    DatabaseOperations.GetFeedsByMiner = GetFeedsByMiner;
    var GetRealSupply = /** @class */ (function (_super) {
        __extends(GetRealSupply, _super);
        function GetRealSupply() {
            return _super.call(this, DatabaseOperationName.getRealSupply) || this;
        }
        return GetRealSupply;
    }(DatabaseOperation));
    DatabaseOperations.GetRealSupply = GetRealSupply;
    var GetVestingBalances = /** @class */ (function (_super) {
        __extends(GetVestingBalances, _super);
        function GetVestingBalances(accountId) {
            return _super.call(this, DatabaseOperationName.getVestingBalances, accountId) || this;
        }
        return GetVestingBalances;
    }(DatabaseOperation));
    DatabaseOperations.GetVestingBalances = GetVestingBalances;
    var ListActiveSubscriptionsByConsumer = /** @class */ (function (_super) {
        __extends(ListActiveSubscriptionsByConsumer, _super);
        function ListActiveSubscriptionsByConsumer(accountId, limit) {
            return _super.call(this, DatabaseOperationName.listActiveSubscriptionsByConsumer, accountId, limit) || this;
        }
        return ListActiveSubscriptionsByConsumer;
    }(DatabaseOperation));
    DatabaseOperations.ListActiveSubscriptionsByConsumer = ListActiveSubscriptionsByConsumer;
    var ListSubscriptionsByConsumer = /** @class */ (function (_super) {
        __extends(ListSubscriptionsByConsumer, _super);
        function ListSubscriptionsByConsumer(accountId, limit) {
            return _super.call(this, DatabaseOperationName.listSubscriptionsByConsumer, accountId, limit) || this;
        }
        return ListSubscriptionsByConsumer;
    }(DatabaseOperation));
    DatabaseOperations.ListSubscriptionsByConsumer = ListSubscriptionsByConsumer;
    var ListActiveSubscriptionsByAuthor = /** @class */ (function (_super) {
        __extends(ListActiveSubscriptionsByAuthor, _super);
        function ListActiveSubscriptionsByAuthor(accountId, limit) {
            return _super.call(this, DatabaseOperationName.listActiveSubscriptionsByAuthor, accountId, limit) || this;
        }
        return ListActiveSubscriptionsByAuthor;
    }(DatabaseOperation));
    DatabaseOperations.ListActiveSubscriptionsByAuthor = ListActiveSubscriptionsByAuthor;
    var ListSubscriptionsByAuthor = /** @class */ (function (_super) {
        __extends(ListSubscriptionsByAuthor, _super);
        function ListSubscriptionsByAuthor(accountId, limit) {
            return _super.call(this, DatabaseOperationName.listSubscriptionsByAuthor, accountId, limit) || this;
        }
        return ListSubscriptionsByAuthor;
    }(DatabaseOperation));
    DatabaseOperations.ListSubscriptionsByAuthor = ListSubscriptionsByAuthor;
    var ListSeedersByUpload = /** @class */ (function (_super) {
        __extends(ListSeedersByUpload, _super);
        function ListSeedersByUpload(limit) {
            return _super.call(this, DatabaseOperationName.listSeedersByUpload, limit) || this;
        }
        return ListSeedersByUpload;
    }(DatabaseOperation));
    DatabaseOperations.ListSeedersByUpload = ListSeedersByUpload;
    var ListSeedersByRegion = /** @class */ (function (_super) {
        __extends(ListSeedersByRegion, _super);
        function ListSeedersByRegion(region) {
            return _super.call(this, DatabaseOperationName.listSeedersByRegion, region) || this;
        }
        return ListSeedersByRegion;
    }(DatabaseOperation));
    DatabaseOperations.ListSeedersByRegion = ListSeedersByRegion;
    var ListSeedersByRating = /** @class */ (function (_super) {
        __extends(ListSeedersByRating, _super);
        function ListSeedersByRating(limit) {
            return _super.call(this, DatabaseOperationName.listSeedersByRating, limit) || this;
        }
        return ListSeedersByRating;
    }(DatabaseOperation));
    DatabaseOperations.ListSeedersByRating = ListSeedersByRating;
    var GetProposedTransactions = /** @class */ (function (_super) {
        __extends(GetProposedTransactions, _super);
        function GetProposedTransactions(accountId) {
            return _super.call(this, DatabaseOperationName.getProposedTransactions, accountId) || this;
        }
        return GetProposedTransactions;
    }(DatabaseOperation));
    DatabaseOperations.GetProposedTransactions = GetProposedTransactions;
})(DatabaseOperations = exports.DatabaseOperations || (exports.DatabaseOperations = {}));
//# sourceMappingURL=database.js.map